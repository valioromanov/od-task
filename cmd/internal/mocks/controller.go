// Code generated by MockGen. DO NOT EDIT.
// Source: controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	postgresql "od-task/pkg/repository/postgresql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRentalRepository is a mock of RentalRepository interface.
type MockRentalRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRentalRepositoryMockRecorder
}

// MockRentalRepositoryMockRecorder is the mock recorder for MockRentalRepository.
type MockRentalRepositoryMockRecorder struct {
	mock *MockRentalRepository
}

// NewMockRentalRepository creates a new mock instance.
func NewMockRentalRepository(ctrl *gomock.Controller) *MockRentalRepository {
	mock := &MockRentalRepository{ctrl: ctrl}
	mock.recorder = &MockRentalRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRentalRepository) EXPECT() *MockRentalRepositoryMockRecorder {
	return m.recorder
}

// FindByFilters mocks base method.
func (m *MockRentalRepository) FindByFilters(filters map[string][]string) ([]postgresql.FindResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByFilters", filters)
	ret0, _ := ret[0].([]postgresql.FindResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByFilters indicates an expected call of FindByFilters.
func (mr *MockRentalRepositoryMockRecorder) FindByFilters(filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByFilters", reflect.TypeOf((*MockRentalRepository)(nil).FindByFilters), filters)
}

// FindById mocks base method.
func (m *MockRentalRepository) FindById(id string) (postgresql.FindResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", id)
	ret0, _ := ret[0].(postgresql.FindResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindById indicates an expected call of FindById.
func (mr *MockRentalRepositoryMockRecorder) FindById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockRentalRepository)(nil).FindById), id)
}
