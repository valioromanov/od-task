// Code generated by MockGen. DO NOT EDIT.
// Source: presenter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	internal "od-task/cmd/internal"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRentalController is a mock of RentalController interface.
type MockRentalController struct {
	ctrl     *gomock.Controller
	recorder *MockRentalControllerMockRecorder
}

// MockRentalControllerMockRecorder is the mock recorder for MockRentalController.
type MockRentalControllerMockRecorder struct {
	mock *MockRentalController
}

// NewMockRentalController creates a new mock instance.
func NewMockRentalController(ctrl *gomock.Controller) *MockRentalController {
	mock := &MockRentalController{ctrl: ctrl}
	mock.recorder = &MockRentalControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRentalController) EXPECT() *MockRentalControllerMockRecorder {
	return m.recorder
}

// GetFilteredRentals mocks base method.
func (m *MockRentalController) GetFilteredRentals(filters map[string][]string) ([]internal.GetRentalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilteredRentals", filters)
	ret0, _ := ret[0].([]internal.GetRentalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFilteredRentals indicates an expected call of GetFilteredRentals.
func (mr *MockRentalControllerMockRecorder) GetFilteredRentals(filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilteredRentals", reflect.TypeOf((*MockRentalController)(nil).GetFilteredRentals), filters)
}

// GetRentalByID mocks base method.
func (m *MockRentalController) GetRentalByID(id string) (internal.GetRentalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRentalByID", id)
	ret0, _ := ret[0].(internal.GetRentalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRentalByID indicates an expected call of GetRentalByID.
func (mr *MockRentalControllerMockRecorder) GetRentalByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRentalByID", reflect.TypeOf((*MockRentalController)(nil).GetRentalByID), id)
}
